name: Merge Dependabot PRs

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to merge PRs into'
        required: true
        default: 'main'

jobs:
  merge-dependabot-prs:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Merge Dependabot PRs
        id: merge-prs
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const branchToMergeInto = '${{ github.event.inputs.branch }}';
            
            // Get open pull requests authored by dependabot
            const pulls = await github.paginate('GET /repos/:owner/:repo/pulls', {
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: 'dependabot',
            });

            if (pulls.length === 0) {
              console.log('No open pull requests authored by dependabot.');
              return;
            }

            // Merge pull requests with a green status check
            for (const pull of pulls) {
              const prNumber = pull.number;
              const status = await github.repos.getCombinedStatusForRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: pull.head.sha,
              });

              if (status.data.state === 'success') {
                console.log(`Merging PR #${prNumber} into ${branchToMergeInto}`);
                await github.rest.repos.merge({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  base: branchToMergeInto,
                  head: `refs/pull/${prNumber}/head`,
                });
              } else {
                console.log(`Skipping PR #${prNumber} because it does not have a green status.`);
              }
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
